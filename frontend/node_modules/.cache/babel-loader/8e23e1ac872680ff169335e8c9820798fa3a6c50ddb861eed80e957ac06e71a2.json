{"ast":null,"code":"var _jsxFileName = \"C:\\\\nv\\\\geeks\\\\geeks\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Set up axios interceptors\n  useEffect(() => {\n    // Request interceptor to add token\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor to handle token expiration\n    const responseInterceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && token) {\n        // Token expired, try to refresh\n        try {\n          const refreshToken = localStorage.getItem('refreshToken');\n          if (refreshToken) {\n            const response = await axios.post('/auth/refresh', {}, {\n              headers: {\n                Authorization: `Bearer ${refreshToken}`\n              }\n            });\n            const newToken = response.data.access_token;\n            setToken(newToken);\n            localStorage.setItem('token', newToken);\n\n            // Retry the original request\n            error.config.headers.Authorization = `Bearer ${newToken}`;\n            return axios.request(error.config);\n          }\n        } catch (refreshError) {\n          // Refresh failed, logout user\n          logout();\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [token]);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          // Token invalid, remove it\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        access_token,\n        refresh_token,\n        user: userData\n      } = response.data;\n\n      // Store tokens\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('refreshToken', refresh_token);\n      setToken(access_token);\n      setUser(userData);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/auth/register', userData);\n      toast.success('Registration successful! Please wait for admin verification.');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    setToken(null);\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const isAuthenticated = () => {\n    return !!user && !!token;\n  };\n  const hasRole = role => {\n    return (user === null || user === void 0 ? void 0 : user.role) === role;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","defaults","baseURL","process","env","REACT_APP_API_URL","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","requestInterceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","responseInterceptor","response","_error$response","status","refreshToken","post","newToken","data","access_token","setItem","refreshError","logout","eject","loadUser","get","removeItem","login","email","password","refresh_token","userData","success","_error$response2","_error$response2$data","message","register","_error$response3","_error$response3$data","isAuthenticated","hasRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/nv/geeks/geeks/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Set up axios interceptors\n  useEffect(() => {\n    // Request interceptor to add token\n    const requestInterceptor = axios.interceptors.request.use(\n      (config) => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Response interceptor to handle token expiration\n    const responseInterceptor = axios.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        if (error.response?.status === 401 && token) {\n          // Token expired, try to refresh\n          try {\n            const refreshToken = localStorage.getItem('refreshToken');\n            if (refreshToken) {\n              const response = await axios.post('/auth/refresh', {}, {\n                headers: { Authorization: `Bearer ${refreshToken}` }\n              });\n              const newToken = response.data.access_token;\n              setToken(newToken);\n              localStorage.setItem('token', newToken);\n              \n              // Retry the original request\n              error.config.headers.Authorization = `Bearer ${newToken}`;\n              return axios.request(error.config);\n            }\n          } catch (refreshError) {\n            // Refresh failed, logout user\n            logout();\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [token]);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          // Token invalid, remove it\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    loadUser();\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n\n      const { access_token, refresh_token, user: userData } = response.data;\n      \n      // Store tokens\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('refreshToken', refresh_token);\n      setToken(access_token);\n      setUser(userData);\n\n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post('/auth/register', userData);\n      \n      toast.success('Registration successful! Please wait for admin verification.');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    setToken(null);\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const isAuthenticated = () => {\n    return !!user && !!token;\n  };\n\n  const hasRole = (role) => {\n    return user?.role === role;\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}